// Generated by CoffeeScript 1.7.1
(function() {
  var mod;

  mod = angular.module('coinpagesApp');

  mod.service('markets', function() {
    var calculateFees, calculateNet, calculateTradeFees, key, market, markets, updateLiveData;
    markets = {
      kraken: {
        name: "Kraken",
        currencies: ["EUR"],
        symbol: "krakenEUR",
        tradeFees: [
          {
            percent: 0.20 / 100,
            volumeLimit: 10 * 1000,
            period: 30
          }
        ],
        fees: {
          "default": 'sepa',
          withdraw: {
            sepa: function(amount) {
              return 0.90;
            },
            wireEUR: function() {
              return 5;
            },
            wireUSD: function() {
              return 30;
            }
          },
          deposit: {
            sepa: function(amount) {
              return 0;
            },
            wireEUR: function(amount) {
              return 5;
            },
            wireUSD: function(amount) {
              return 15;
            }
          }
        }
      },
      bitstamp: {
        name: "Bitstamp",
        currencies: ["USD"],
        symbol: "bitstampUSD",
        tradeFees: [
          {
            percent: 0.5 / 100,
            volumeLimit: 500,
            period: 30
          }
        ],
        fees: {
          "default": 'sepa',
          withdraw: {
            sepa: function(amount) {
              return 0.90;
            },
            wire: function(amount) {
              var fee;
              fee = amount * 0.09 / 100;
              if (fee < 15) {
                fee = 15;
              }
              return fee;
            }
          },
          deposit: {
            sepa: function(amount) {
              return 0;
            },
            wire: function(amount) {
              return 0;
            }
          }
        }
      },
      bitfinex: {
        name: "Bitfinex",
        currencies: ["USD"],
        symbol: "bitfinexUSD",
        tradeFees: [
          {
            percent: 0.1 / 100,
            volumeLimit: 500,
            period: 30
          }
        ],
        fees: {
          "default": 'wire',
          withdraw: {
            wire: function(amount) {
              var fee;
              fee = amount * 0.01 / 100;
              if (fee < 20) {
                fee = 20;
              }
              return fee;
            }
          },
          deposit: {
            wire: function(amount) {
              var fee;
              fee = amount * 0.01 / 100;
              if (fee < 20) {
                fee = 20;
              }
              return fee;
            }
          }
        }
      },
      virtex: {
        name: "VirtEx",
        currencies: ["CAD"],
        symbol: "virtexCAD",
        tradeFees: [
          {
            percent: 1.5 / 100,
            volumeLimit: 400,
            period: 120
          }
        ],
        fees: {
          "default": 'direct',
          withdraw: {
            direct: function(amount) {
              return 6;
            }
          },
          deposit: {
            direct: function(amount) {
              return 5;
            },
            bill: function(amount) {
              return 20;
            }
          }
        }
      },
      vos: {
        name: "VoS",
        currencies: ["CAD"],
        symbol: "vosCAD",
        tradeFees: [
          {
            percent: 1.0 / 100
          }
        ],
        fees: {
          "default": 'direct',
          withdraw: {
            direct: function(amount) {
              return 0;
            },
            wire: function(amount) {
              var fee;
              fee = amount * 0.2 / 100;
              if (fee < 25) {
                fee = 25;
              }
              if (fee > 135) {
                fee = 135;
              }
              return fee;
            }
          },
          deposit: {
            wire: function(amount) {
              return 15;
            },
            direct: function(amount) {
              return 5;
            }
          }
        }
      }
    };
    updateLiveData = function(data) {
      var key, market;
      for (key in markets) {
        market = markets[key];
        if (data.symbol === market.symbol) {
          console.log("updated " + data.symbol);
          market.calculatedData = {
            tradeFees: {}
          };
          market.liveData = data;
        }
      }
    };
    calculateNet = function(rateKey, amount) {
      var multiplier, rate, _ref;
      multiplier = rateKey === 'bid' ? -1 : 1;
      if ((rate = (_ref = this.liveData) != null ? _ref[rateKey] : void 0) != null) {
        return (rate * amount) + (this.calculateTradeFees(rateKey, amount) * multiplier);
      } else {
        return 0;
      }
    };
    calculateFees = function(balance, feeType, activeFee) {
      var feeFn, _ref, _ref1, _ref2;
      activeFee = (_ref = this.fees) != null ? _ref["default"] : void 0;
      if ((activeFee != null) && ((feeFn = (_ref1 = this.fees) != null ? (_ref2 = _ref1[feeType]) != null ? _ref2[activeFee] : void 0 : void 0) != null)) {
        return feeFn(balance);
      } else {
        return null;
      }
    };
    calculateTradeFees = function(rateKey, amount) {
      var rate, _ref;
      if ((rate = (_ref = this.liveData) != null ? _ref[rateKey] : void 0) != null) {
        return rate * amount * this.tradeFees[0].percent;
      } else {
        return 0;
      }
    };
    for (key in markets) {
      market = markets[key];
      market.calculateTradeFees = calculateTradeFees;
      market.calculateNet = calculateNet;
      market.calculateFees = calculateFees;
    }
    return {
      updateLiveData: updateLiveData,
      data: markets
    };
  });

}).call(this);
